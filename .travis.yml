# sudo: required

services:
  - docker
  
before_install:
  # - sudo apt-get update
  # - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

git:
  depth: 1

branches:
  only:
  - master

language: generic

env:
  - NPM_TAG=latest IMAGE_NAME=theia-full
  - NPM_TAG=next IMAGE_NAME=theia-full
  - NPM_TAG=latest IMAGE_NAME=theia
  - NPM_TAG=next IMAGE_NAME=theia
  - NPM_TAG=latest IMAGE_NAME=theia-java
  - NPM_TAG=next IMAGE_NAME=theia-java
  - NPM_TAG=latest IMAGE_NAME=theia-go
  - NPM_TAG=next IMAGE_NAME=theia-go
  - NPM_TAG=latest IMAGE_NAME=yangster
  - NPM_TAG=next IMAGE_NAME=yangster
  - NPM_TAG=latest IMAGE_NAME=theia-python
  - NPM_TAG=next IMAGE_NAME=theia-python

install:
  - cd "$IMAGE_NAME-docker"
  - IMAGE="theiaide/$IMAGE_NAME"
  - IMAGE_TAG="$IMAGE":$(npm view "@theia/core@$NPM_TAG" version)
  - echo $IMAGE_TAG
  - travis_wait docker build --build-arg "version=$NPM_TAG" --build-arg "GITHUB_TOKEN=$GITHUB_TOKEN" . -t "$IMAGE_TAG" --no-cache
  - docker tag "$IMAGE_TAG" "$IMAGE:$NPM_TAG"
  - docker run -d -p 0.0.0.0:4000:3000 "$IMAGE_TAG"

script: cd ../tests; yarn; yarn test-app-$IMAGE_NAME

before_deploy:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
deploy:
  provider: script
  script: docker push "$IMAGE"
  on:
    branch: master
  skip_cleanup: true

notifications:
  on_success: change
  on_failure: always
  on_start: never
  